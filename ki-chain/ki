#!/bin/bash

while true
do

# Logo

curl -s https://raw.githubusercontent.com/ProNodes11/NodeGuides/main/logo | bash

# Menu

PS3='Select an action: '
options=(
"Install Node"
"Create wallet"
"Check node logs"
"Synchronization via StateSync"
"Synchronization via SnapShot"
"UPDATE"
"Delete Node"
"Exit")
select opt in "${options[@]}"
do
case $opt in

"Install Node")
echo "*********************"
echo -e "\e[1m\e[34m		Lets's begin\e[0m"
echo "*********************"
echo -e "\e[1m\e[34m	Enter your Validator_Name:\e[0m"
echo "_|-_|-_|-_|-_|-_|-_|"
read Validator_Name
echo "_|-_|-_|-_|-_|-_|-_|"
echo export Validator_Name=${Validator_Name} >> $HOME/.bash_profile
echo export CHAIN_ID="kichain-2" >> $HOME/.bash_profile
source ~/.bash_profile

echo -e "\e[1m\e[32m1. Updating packages and dependencies--> \e[0m" && sleep 1
#UPDATE APT
sudo apt update && sudo apt upgrade -y
sudo apt install curl snapd lz4 tar wget clang pkg-config libssl-dev libleveldb-dev jq build-essential bsdmainutils git make ncdu htop screen unzip bc fail2ban htop -y

echo -e "        \e[1m\e[32m2. Installing GO--> \e[0m" && sleep 1
#INSTALL GO
wget https://dl.google.com/go/go1.18.linux-amd64.tar.gz
sudo tar -C /usr/local -xzf go1.18.linux-amd64.tar.gz
mkdir -p $HOME/go/bin
PATH=$PATH:/usr/local/go/bin
echo "export PATH=$PATH:$(go env GOPATH)/bin" >> ~/.bash_profile
source ~/.bash_profile
go version

echo -e "              \e[1m\e[32m3. Downloading and building binaries--> \e[0m" && sleep 1
#INSTALL
cd $HOME
git clone https://github.com/KiFoundation/ki-tools.git
cd ki-tools
make install

kid init $Validator_Name --chain-id $CHAIN_ID

curl https://raw.githubusercontent.com/KiFoundation/ki-networks/v0.1/Mainnet/kichain-2/genesis.json > ~/.kid/config/genesis.json
wget -O $HOME/.kid/config/addrbook.json "https://raw.githubusercontent.com/ProNodes11/NodeGuides/main/ki-chain/addrbook.json"


echo -e "                     \e[1m\e[32m4. Node optimization and improvement--> \e[0m" && sleep 1

PEERS_LIST="$(curl -s "https://raw.githubusercontent.com/KiFoundation/ki-networks/v0.1/Mainnet/kichain-2/peers.txt")"
PEERS=$(echo $PEERS_LIST | tr ' ' ',')
sed -i.bak -e "s/^persistent_peers *=.*/persistent_peers = \"$PEERS\"/" $HOME/.kid/config/config.toml

SEEDS_LIST="$(curl -s "https://raw.githubusercontent.com/KiFoundation/ki-networks/v0.1/Mainnet/kichain-2/seeds.txt")"
SEEDS=$(echo $SEEDS_LIST | tr ' ' ',')
sed -i.bak -e "s/^seeds *=.*/seeds = \"$SEEDS\"/" $HOME/.kid/config/config.toml

MIN_GAS_PRICE="0.025uxki"
sed -i.bak -e "s/^minimum-gas-prices *=.*/minimum-gas-prices = \"$MIN_GAS_PRICE\"/" $HOME/.kid/config/app.toml

# config pruning
pruning_keep_recent="10000"
pruning_keep_every="0"
pruning_interval="10"

# pruning and indexer
pruning="custom" && \
pruning_keep_recent="100" && \
pruning_keep_every="0" && \
pruning_interval="10" && \
sed -i -e "s/^pruning *=.*/pruning = \"$pruning\"/" ~/.kid/config/app.toml && \
sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \"$pruning_keep_recent\"/" ~/.kid/config/app.toml && \
sed -i -e "s/^pruning-keep-every *=.*/pruning-keep-every = \"$pruning_keep_every\"/" ~/.kid/config/app.toml && \
sed -i -e "s/^pruning-interval *=.*/pruning-interval = \"$pruning_interval\"/" ~/.kid/config/app.toml
indexer="null" && \
sed -i -e "s/^indexer *=.*/indexer = \"$indexer\"/" $HOME/.kid/config/config.toml


sudo tee /etc/systemd/system/kichaind.service > /dev/null <<EOF
[Unit]
Description=KiChain Mainnet
After=network-online.target
[Service]
User=$USER
ExecStart=$(which kid) start
Restart=on-failure
RestartSec=10
LimitNOFILE=65535
[Install]
WantedBy=multi-user.target
EOF

# Start node
sudo systemctl daemon-reload
sudo systemctl enable kichaind
sudo systemctl restart kichaind

echo '=============== SETUP FINISHED ==================='
echo -e 'Congratulations:        \e[1m\e[32mSUCCESSFUL NODE INSTALLATION\e[0m'
echo -e 'To check logs:        \e[1m\e[33mjournalctl -u kichaind -f -o cat\e[0m'
echo -e "To check sync status: \e[1m\e[35mcurl -s localhost:26657/status\e[0m"

break
;;
"Create wallet")
echo "_|-_|-_|-_|-_|-_|-_|"
echo -e "      \e[1m\e[35m Your WalletName:\e[0m"
echo "_|-_|-_|-_|-_|-_|-_|"
read Wallet
echo export Wallet=${Wallet} >> $HOME/.bash_profile
source ~/.bash_profile
kid keys add $Wallet
echo -e "      \e[1m\e[32m!!!!!!!!!SAVE!!!!!!!!!!!!!!!!SAVE YOUR MNEMONIC PHRASE!!!!!!!!!SAVE!!!!!!!!!!!!!!!!\e[0m'"

break
;;
"Synchronization via StateSync")
SNAP_RPC="http://195.3.223.11:26667"

LATEST_HEIGHT=$(curl -s $SNAP_RPC/block | jq -r .result.block.header.height)
BLOCK_HEIGHT=$((LATEST_HEIGHT - 2000))
TRUST_HASH=$(curl -s "$SNAP_RPC/block?height=$BLOCK_HEIGHT" | jq -r .result.block_id.hash)

# check
echo $LATEST_HEIGHT $BLOCK_HEIGHT $TRUST_HASH

# if OUTPUT ok! - do next

sed -i.bak -E "s|^(enable[[:space:]]+=[[:space:]]+).*$|\1true| ; \
s|^(rpc_servers[[:space:]]+=[[:space:]]+).*$|\1\"$SNAP_RPC,$SNAP_RPC\"| ; \
s|^(trust_height[[:space:]]+=[[:space:]]+).*$|\1$BLOCK_HEIGHT| ; \
s|^(trust_hash[[:space:]]+=[[:space:]]+).*$|\1\"$TRUST_HASH\"| ; \
s|^(seeds[[:space:]]+=[[:space:]]+).*$|\1\"\"|" $HOME/.kid/config/config.toml

sudo systemctl restart kichaind && journalctl -u kichaind -f -o cat

break
;;
"UPDATE")
echo -e "      \e[1m\e[32m SOOOON\e[0m"
kid version

break
;;
"Check node logs")
sudo journalctl -u kichaind -f -o cat

break
;;
"Synchronization via SnapShot")
cd
wget -O kichain_12422796.tar.lz4 https://snapshots.polkachu.com/snapshots/kichain/kichain_12422796.tar.lz4 --inet4-only
sudo systemctl stop kichaind
kid tendermint unsafe-reset-all --home $HOME/.kid --keep-addr-book
rm -r ~/.kid/wasm
lz4 -c -d kichain_12422796.tar.lz4  | tar -x -C $HOME/.kid
rm -v kichain_12422796.tar.lz4
sudo systemctl restart kichaind
break
;;
"Delete Node")
sudo systemctl stop kichaind && \
sudo systemctl disable kichaind && \
rm /etc/systemd/system/kichaind.service && \
sudo systemctl daemon-reload && \
cd $HOME && \
rm -rf .kid && \
rm -rf kid && \
rm -rf $(which kid)

break
;;
"Exit")
exit
esac
done
done
